{"version":3,"file":"static/js/793.b49d6257.chunk.js","mappings":"+SAEaA,EAAmB,mCAAG,uGAElBC,EAAAA,EAAAA,IACX,4FAH6B,8EAMzB,IAAIC,MAAM,KAAIC,SANW,wDAAH,qDASnBC,EAAgB,mCAAG,WAAMC,GAAN,0FAEfJ,EAAAA,EAAAA,IAAA,0DACwCI,EADxC,8CAFe,8EAMtB,IAAIH,MAAM,KAAIC,SANQ,wDAAH,sDAUhBG,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBN,EAAAA,EAAAA,IAAA,6CAC2BM,EAD3B,8CAFgB,8EAMvB,IAAIL,MAAM,KAAIC,SANS,wDAAH,sDAUjBK,EAAiB,mCAAG,WAAMD,GAAN,0FAEhBN,EAAAA,EAAAA,IAAA,6CAC2BM,EAD3B,sDAFgB,8EAMvB,IAAIL,MAAM,KAAIC,SANS,wDAAH,sDAUjBM,EAAiB,mCAAG,WAAMF,GAAN,0FAEhBN,EAAAA,EAAAA,IAAA,6CAC2BM,EAD3B,sDAFgB,8EAMvB,IAAIL,MAAM,KAAIC,SANS,wDAAH,qD,8LCtCjBO,EAAYC,EAAAA,EAAAA,IAAH,0CAITC,EAAOD,EAAAA,EAAAA,GAAH,kFAMJE,EAAWF,EAAAA,EAAAA,GAAH,sHAQRG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,2nBAmBVK,EAAQL,EAAAA,EAAAA,MAAH,4QAcLM,EAAYN,EAAAA,EAAAA,OAAH,6c,SCQtB,EAjDe,WAAO,IAAD,EACbO,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC/C,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACHL,IACL,iBAAC,gHAE0BnB,EAAAA,EAAAA,IAAiBmB,GAF3C,gBAG+B,KADpBM,EAFX,EAEWA,MACCC,QAAQC,QACfC,IAAAA,OAAAA,QACE,oEAGJL,EAAgBE,EAAKC,SARxB,gDAUGG,QAAQC,IAAR,MAVH,wDAAD,EAaD,GAAE,CAACX,IAEJ,IAAMY,EAAY,mCAAG,WAAMC,GAAN,0EACnBA,EAAEC,iBACIhC,EAAQ+B,EAAEE,OAAOjC,MAAMkC,MAAMC,OAAOC,cAFvB,iDAInBnB,EAAgB,CAAEjB,MAAOA,IAJN,2CAAH,sDAMlB,OACE,UAACK,EAAD,YACE,kBAAMgC,SAAUP,EAAhB,WACE,SAACnB,EAAD,CAAO2B,KAAM,QAASC,KAAK,UAC3B,SAAC3B,EAAD,CAAW2B,KAAK,SAAhB,wBAEF,SAAChC,EAAD,UACGc,EAAamB,KAAI,SAAAC,GAChB,OACE,SAACjC,EAAD,WACE,SAACC,EAAD,CAAYiC,GAAE,kBAAaD,EAAMvC,IAAMyC,MAAO,CAAEC,KAAM/B,GAAtD,SACG4B,EAAMI,SAFIJ,EAAMvC,GAMxB,QAIR,C","sources":["API/TheMovieDB-API.jsx","components/MoviesPage/MoviePage.styled.jsx","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=301ed63e219e09e82245e0c555026296'\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\nexport const fetchMovieSearch = async query => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=301ed63e219e09e82245e0c555026296`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=301ed63e219e09e82245e0c555026296`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=301ed63e219e09e82245e0c555026296`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=301ed63e219e09e82245e0c555026296`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 18px;\n  transition: color 250ms linear;\n  &:hover {\n    color: #0070ba;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap:10px;\n  color: black;\n  text-decoration: none;\n  transition: color 250ms linear;\n  &:hover,\n  &.active {\n    color: #0070ba;\n  }\n  &::before{\n    content: \"\\\";\n    width: 6px;\n    height: 6px;\n    background-color: currentColor;\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  padding: 5px;\n  margin-bottom: 20px;\n  margin-right: 10px;\n  border-radius: 3px;\n  outline: none;\n  border: 1px solid #000;\n  &:focus-visible {\n    border: 1px solid #0070ba;\n    box-shadow: 0 0 2px #0070ba;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  font-size: 18px;\n  padding: 5px;\n  cursor: pointer;\n  border: 1px solid #0070ba;\n  background-color: #e8e8e8;\n  color: #0070ba;\n  border-radius: 3px;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover {\n    color: #fff;\n    background-color: #0070ba;\n    outline: none;\n  }\n  :disabled {\n    cursor: auto;\n    border: 1px solid #8e8e8e;\n    color: #8e8e8e;\n    background-color: #e8e8e8;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from '../../API/TheMovieDB-API';\nimport {\n  Container,\n  List,\n  ListItem,\n  StyledLink,\n  Input,\n  SearchBtn,\n} from './MoviePage.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryName = searchParams.get('query') ?? '';\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  useEffect(() => {\n    if (!queryName) return;\n    (async () => {\n      try {\n        const { data } = await fetchMovieSearch(queryName);\n        if (data.results.length === 0) {\n          Notiflix.Notify.failure(\n            'There are no movies matching you search query. Please try again.'\n          );\n        }\n        setSearchMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [queryName]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const query = e.target.query.value.trim().toLowerCase();\n    if (!query) return;\n    setSearchParams({ query: query });\n  };\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Input name={'query'} type=\"text\" />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </form>\n      <List>\n        {searchMovies.map(movie => {\n          return (\n            <ListItem key={movie.id}>\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\nexport default Movies;\n"],"names":["fetchTrendingMovies","axios","Error","message","fetchMovieSearch","query","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","Container","styled","List","ListItem","StyledLink","NavLink","Input","SearchBtn","location","useLocation","useSearchParams","searchParams","setSearchParams","queryName","get","useState","searchMovies","setSearchMovies","useEffect","data","results","length","Notiflix","console","log","handleSubmit","e","preventDefault","target","value","trim","toLowerCase","onSubmit","name","type","map","movie","to","state","from","title"],"sourceRoot":""}