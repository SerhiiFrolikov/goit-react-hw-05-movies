{"version":3,"file":"static/js/387.b36c2751.chunk.js","mappings":"+SAEaA,EAAmB,mCAAG,uGAElBC,EAAAA,EAAAA,IACX,4FAH6B,8EAMzB,IAAIC,MAAM,KAAIC,SANW,wDAAH,qDASnBC,EAAgB,mCAAG,WAAMC,GAAN,0FAEfJ,EAAAA,EAAAA,IAAA,0DACwCI,EADxC,8CAFe,8EAMtB,IAAIH,MAAM,KAAIC,SANQ,wDAAH,sDAUhBG,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBN,EAAAA,EAAAA,IAAA,6CAC2BM,EAD3B,8CAFgB,8EAMvB,IAAIL,MAAM,KAAIC,SANS,wDAAH,sDAUjBK,EAAiB,mCAAG,WAAMD,GAAN,0FAEhBN,EAAAA,EAAAA,IAAA,6CAC2BM,EAD3B,sDAFgB,8EAMvB,IAAIL,MAAM,KAAIC,SANS,wDAAH,sDAUjBM,EAAiB,mCAAG,WAAMF,GAAN,0FAEhBN,EAAAA,EAAAA,IAAA,6CAC2BM,EAD3B,sDAFgB,8EAMvB,IAAIL,MAAM,KAAIC,SANS,wDAAH,qD,gKCvCjBO,EAAYC,EAAAA,EAAAA,IAAH,0CAITC,EAAOD,EAAAA,EAAAA,GAAH,kGAOJE,EAAWF,EAAAA,EAAAA,GAAH,iIAORG,EAAQH,EAAAA,EAAAA,EAAH,6G,SCwBlB,EAvCgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE0BX,EAAAA,EAAAA,IAAkBM,GAF5C,gBAG+B,KADpBM,EAFX,EAEWA,MACCC,QAAQC,OACfJ,EAAgBE,EAAKC,SAErBH,EAAgB,MANrB,gDASGK,QAAQC,IAAR,MATH,wDAAD,EAYD,GAAE,CAACV,KAGF,SAACL,EAAD,UACGQ,GACC,SAACN,EAAD,UACGM,EAAaQ,KAAI,SAAAC,GAChB,OACE,UAACd,EAAD,YACE,UAACC,EAAD,sBAAgBa,EAAOC,WACvB,uBAAID,EAAOE,YAFEF,EAAOpB,GAKzB,OAGH,SAACO,EAAD,yDAIP,C","sources":["components/API/TheMovieDB-API.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=301ed63e219e09e82245e0c555026296'\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\nexport const fetchMovieSearch = async query => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=301ed63e219e09e82245e0c555026296`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=301ed63e219e09e82245e0c555026296`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=301ed63e219e09e82245e0c555026296`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=301ed63e219e09e82245e0c555026296`\n    );\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  border: 1px solid #8e8e8e;\n  border-radius: 3px;\n  box-shadow: 0 2px 4px #8e8e8e;\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  margin-bottom: 10px;\n  & span {\n    font-weight: 400;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../API/TheMovieDB-API';\nimport { Title, List, ListItem, Container } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await fetchMovieReviews(movieId);\n        if (data.results.length !== 0) {\n          setMovieDetails(data.results);\n        } else {\n          setMovieDetails(null);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {movieDetails ? (\n        <List>\n          {movieDetails.map(review => {\n            return (\n              <ListItem key={review.id}>\n                <Title>Author: {review.author}</Title>\n                <p>{review.content}</p>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <Title>We don't have any reviews for this movie.</Title>\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchTrendingMovies","axios","Error","message","fetchMovieSearch","query","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","Container","styled","List","ListItem","Title","movieId","useParams","useState","movieDetails","setMovieDetails","useEffect","data","results","length","console","log","map","review","author","content"],"sourceRoot":""}